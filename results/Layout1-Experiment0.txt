# Baseline Experiment
-> Considered using as much bins and trucks
   as half of the total number of nodes in the graph
-> Simulation time: 8:22

# Trucks
truckNumber: int = 2
truckCapacity: int = 50
truckFuelCapacity: int = 50
maxTasks: int = 10

# Bins
binCount: int = 2
trashGenCooldown: int = 20
binCapacity: int = 30

# God
secondsPerHour: int = 20
secondsBetweenDisasters: int = 30
secondsBetweenTruckDeath: int = 50
secondsForNewTruck: int = 40

TRAFFIC_BY_TIME = [
    # time, from, to
    (0, 0, 1),
    (6, 2, 4),
    (10, 2, 3),
    (15, 1, 2),
    (19, 3, 5),
    (22, 0, 2),
]

TRASH_BY_TIME = [
    # time, from, to
    (0, 1, 3),
    (6, 9, 12),
    (10, 4, 5),
    (15, 4, 7),
    (19, 7, 10),
    (22, 1, 3),
]

======= Stats =======
fuel_consumed: 35
trucks_without_fuel: 0
trucks_over_capacity: 0
trash_generated: 250
trash_collected: 289
trash_deposited: 247
trash_overspill: 0
disasters: 26
truck_distance_traveled: defaultdict(<function Stats.<lambda> at 0x7bbc43686200>, {'truck0@localhost': 12, 'truck1@localhost': 14, 'truck3@localhost': 6, 'truck4@localhos
t': 7, 'truck6@localhost': 13, 'truck8@localhost': 9, 'truck9@localhost': 8})
Mean collection time per bin:
bin1@localhost: 20.21 s
bin0@localhost: 19.33 s
binstuck0@localhost: 7.74 s
binstuck1@localhost: 7.22 s
binstuck3@localhost: 9.21 s
binstuck5@localhost: 4.34 s
binstuck4@localhost: 9.22 s
binstuck7@localhost: 3.33 s
binstuck6@localhost: 23.28 s
binstuck8@localhost: 7.23 s
